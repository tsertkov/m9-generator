'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _yargs = require('yargs');

var _loadConfigs = require('./lib/load-configs');

var _loadConfigs2 = _interopRequireDefault(_loadConfigs);

var _readPartialsDir = require('./lib/read-partials-dir');

var _readPartialsDir2 = _interopRequireDefault(_readPartialsDir);

var _configWebpack = require('./config-webpack');

var _configWebpack2 = _interopRequireDefault(_configWebpack);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const isGulpDebug = process.env.GULP_DEBUG === 'true';
const isProduction = process.env.NODE_ENV === 'production';
const isDevelopment = !isProduction;

const cwd = _yargs.argv.originalCwd;
const src = _path2.default.resolve(cwd, _yargs.argv.src || process.env.SRC || 'src');
const dst = _path2.default.resolve(cwd, _yargs.argv.dst || process.env.DST || 'build');

const DIR_PAGES = 'pages';
const DIR_CONTENT = 'content';
const DIR_HELPERS = 'helpers';
const DIR_PARTIALS = 'partials';
const DIR_LAYOUTS = 'layouts';
const DIR_SCRIPTS = 'scripts';
const DIR_STYLES = 'styles';
const DIR_ASSETS = 'assets';
const DIR_PUBLIC = 'public';
const TPL_ENGINE = 'handlebars';

const paths = {
  cwd,
  src,
  dst,
  dstAssets: _path2.default.join(dst, DIR_ASSETS),
  srcPublic: _path2.default.join(src, DIR_PUBLIC),
  srcScripts: _path2.default.join(src, DIR_SCRIPTS),
  srcStyles: _path2.default.join(src, DIR_STYLES),
  srcLayouts: _path2.default.join(src, DIR_LAYOUTS),
  srcContent: _path2.default.join(src, DIR_CONTENT),
  srcPages: _path2.default.join(src, DIR_PAGES),
  srcHelpers: _path2.default.join(src, DIR_HELPERS),
  srcPartials: _path2.default.join(src, DIR_PARTIALS)
};

let config = {
  isGulpDebug,
  isProduction,
  isDevelopment,
  paths,
  htmlmin: {
    pattern: '**/*.html'
  },
  pages: {
    directory: paths.srcPages
  },
  contentDir: {
    directory: paths.srcContent,
    transformer: 'wordpress'
  },
  helpers: {
    directory: paths.srcHelpers
  },
  layouts: {
    engine: TPL_ENGINE,
    directory: paths.srcLayouts,
    partials: paths.srcPartials
  },
  inplace: {
    engineOptions: {
      partials: (0, _readPartialsDir2.default)(paths.srcPartials)
    }
  },
  copy: {
    src: _path2.default.join(paths.srcPublic, '**/*')
  },
  assets: {
    scripts: _path2.default.join(paths.srcScripts, '*.js'),
    styles: _path2.default.join(paths.srcStyles, '*.css'),
    manifest: 'assets.json',
    publicPath: `/${DIR_ASSETS}/`,
    dst: paths.dstAssets
  },
  dev: {
    host: 'localhost',
    webpackPort: 9000,
    browsersyncPort: 3000
  }
};

config = (0, _configWebpack2.default)(config);
(0, _loadConfigs2.default)(config, src);

exports.default = config;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25maWcuanMiXSwibmFtZXMiOlsiaXNHdWxwRGVidWciLCJwcm9jZXNzIiwiZW52IiwiR1VMUF9ERUJVRyIsImlzUHJvZHVjdGlvbiIsIk5PREVfRU5WIiwiaXNEZXZlbG9wbWVudCIsImN3ZCIsImFyZ3YiLCJvcmlnaW5hbEN3ZCIsInNyYyIsInBhdGgiLCJyZXNvbHZlIiwiU1JDIiwiZHN0IiwiRFNUIiwiRElSX1BBR0VTIiwiRElSX0NPTlRFTlQiLCJESVJfSEVMUEVSUyIsIkRJUl9QQVJUSUFMUyIsIkRJUl9MQVlPVVRTIiwiRElSX1NDUklQVFMiLCJESVJfU1RZTEVTIiwiRElSX0FTU0VUUyIsIkRJUl9QVUJMSUMiLCJUUExfRU5HSU5FIiwicGF0aHMiLCJkc3RBc3NldHMiLCJqb2luIiwic3JjUHVibGljIiwic3JjU2NyaXB0cyIsInNyY1N0eWxlcyIsInNyY0xheW91dHMiLCJzcmNDb250ZW50Iiwic3JjUGFnZXMiLCJzcmNIZWxwZXJzIiwic3JjUGFydGlhbHMiLCJjb25maWciLCJodG1sbWluIiwicGF0dGVybiIsInBhZ2VzIiwiZGlyZWN0b3J5IiwiY29udGVudERpciIsInRyYW5zZm9ybWVyIiwiaGVscGVycyIsImxheW91dHMiLCJlbmdpbmUiLCJwYXJ0aWFscyIsImlucGxhY2UiLCJlbmdpbmVPcHRpb25zIiwiY29weSIsImFzc2V0cyIsInNjcmlwdHMiLCJzdHlsZXMiLCJtYW5pZmVzdCIsInB1YmxpY1BhdGgiLCJkZXYiLCJob3N0Iiwid2VicGFja1BvcnQiLCJicm93c2Vyc3luY1BvcnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7Ozs7QUFFQSxNQUFNQSxjQUFjQyxRQUFRQyxHQUFSLENBQVlDLFVBQVosS0FBMkIsTUFBL0M7QUFDQSxNQUFNQyxlQUFlSCxRQUFRQyxHQUFSLENBQVlHLFFBQVosS0FBeUIsWUFBOUM7QUFDQSxNQUFNQyxnQkFBZ0IsQ0FBQ0Ys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QjNCLEdBQXBCOztrQkFFZTJCLE0iLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbmltcG9ydCB7IGFyZ3YgfSBmcm9tICd5YXJncydcbmltcG9ydCBsb2FkQ29uZmlncyBmcm9tICcuL2xpYi9sb2FkLWNvbmZpZ3MnXG5pbXBvcnQgcmVhZFBhcnRpYWxzRGlyIGZyb20gJy4vbGliL3JlYWQtcGFydGlhbHMtZGlyJ1xuaW1wb3J0IHdlYnBhY2tDb25maWcgZnJvbSAnLi9jb25maWctd2VicGFjaydcblxuY29uc3QgaXNHdWxwRGVidWcgPSBwcm9jZXNzLmVudi5HVUxQX0RFQlVHID09PSAndHJ1ZSdcbmNvbnN0IGlzUHJvZHVjdGlvbiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbidcbmNvbnN0IGlzRGV2ZWxvcG1lbnQgPSAhaXNQcm9kdWN0aW9uXG5cbmNvbnN0IGN3ZCA9IGFyZ3Yub3JpZ2luYWxDd2RcbmNvbnN0IHNyYyA9IHBhdGgucmVzb2x2ZShjd2QsIGFyZ3Yuc3JjIHx8IHByb2Nlc3MuZW52LlNSQyB8fCAnc3JjJylcbmNvbnN0IGRzdCA9IHBhdGgucmVzb2x2ZShjd2QsIGFyZ3YuZHN0IHx8IHByb2Nlc3MuZW52LkRTVCB8fCAnYnVpbGQnKVxuXG5jb25zdCBESVJfUEFHRVMgPSAncGFnZXMnXG5jb25zdCBESVJfQ09OVEVOVCA9ICdjb250ZW50J1xuY29uc3QgRElSX0hFTFBFUlMgPSAnaGVscGVycydcbmNvbnN0IERJUl9QQVJUSUFMUyA9ICdwYXJ0aWFscydcbmNvbnN0IERJUl9MQVlPVVRTID0gJ2xheW91dHMnXG5jb25zdCBESVJfU0NSSVBUUyA9ICdzY3JpcHRzJ1xuY29uc3QgRElSX1NUWUxFUyA9ICdzdHlsZXMnXG5jb25zdCBESVJfQVNTRVRTID0gJ2Fzc2V0cydcbmNvbnN0IERJUl9QVUJMSUMgPSAncHVibGljJ1xuY29uc3QgVFBMX0VOR0lORSA9ICdoYW5kbGViYXJzJ1xuXG5jb25zdCBwYXRocyA9IHtcbiAgY3dkLFxuICBzcmMsXG4gIGRzdCxcbiAgZHN0QXNzZXRzOiBwYXRoLmpvaW4oZHN0LCBESVJfQVNTRVRTKSxcbiAgc3JjUHVibGljOiBwYXRoLmpvaW4oc3JjLCBESVJfUFVCTElDKSxcbiAgc3JjU2NyaXB0czogcGF0aC5qb2luKHNyYywgRElSX1NDUklQVFMpLFxuICBzcmNTdHlsZXM6IHBhdGguam9pbihzcmMsIERJUl9TVFlMRVMpLFxuICBzcmNMYXlvdXRzOiBwYXRoLmpvaW4oc3JjLCBESVJfTEFZT1VUUyksXG4gIHNyY0NvbnRlbnQ6IHBhdGguam9pbihzcmMsIERJUl9DT05URU5UKSxcbiAgc3JjUGFnZXM6IHBhdGguam9pbihzcmMsIERJUl9QQUdFUyksXG4gIHNyY0hlbHBlcnM6IHBhdGguam9pbihzcmMsIERJUl9IRUxQRVJTKSxcbiAgc3JjUGFydGlhbHM6IHBhdGguam9pbihzcmMsIERJUl9QQVJUSUFMUylcbn1cblxubGV0IGNvbmZpZyA9IHtcbiAgaXNHdWxwRGVidWcsXG4gIGlzUHJvZHVjdGlvbixcbiAgaXNEZXZlbG9wbWVudCxcbiAgcGF0aHMsXG4gIGh0bWxtaW46IHtcbiAgICBwYXR0ZXJuOiAnKiovKi5odG1sJ1xuICB9LFxuICBwYWdlczoge1xuICAgIGRpcmVjdG9yeTogcGF0aHMuc3JjUGFnZXNcbiAgfSxcbiAgY29udGVudERpcjoge1xuICAgIGRpcmVjdG9yeTogcGF0aHMuc3JjQ29udGVudCxcbiAgICB0cmFuc2Zvcm1lcjogJ3dvcmRwcmVzcydcbiAgfSxcbiAgaGVscGVyczoge1xuICAgIGRpcmVjdG9yeTogcGF0aHMuc3JjSGVscGVyc1xuICB9LFxuICBsYXlvdXRzOiB7XG4gICAgZW5naW5lOiBUUExfRU5HSU5FLFxuICAgIGRpcmVjdG9yeTogcGF0aHMuc3JjTGF5b3V0cyxcbiAgICBwYXJ0aWFsczogcGF0aHMuc3JjUGFydGlhbHNcbiAgfSxcbiAgaW5wbGFjZToge1xuICAgIGVuZ2luZU9wdGlvbnM6IHtcbiAgICAgIHBhcnRpYWxzOiByZWFkUGFydGlhbHNEaXIocGF0aHMuc3JjUGFydGlhbHMpXG4gICAgfVxuICB9LFxuICBjb3B5OiB7XG4gICAgc3JjOiBwYXRoLmpvaW4ocGF0aHMuc3JjUHVibGljLCAnKiovKicpXG4gIH0sXG4gIGFzc2V0czoge1xuICAgIHNjcmlwdHM6IHBhdGguam9pbihwYXRocy5zcmNTY3JpcHRzLCAnKi5qcycpLFxuICAgIHN0eWxlczogcGF0aC5qb2luKHBhdGhzLnNyY1N0eWxlcywgJyouY3NzJyksXG4gICAgbWFuaWZlc3Q6ICdhc3NldHMuanNvbicsXG4gICAgcHVibGljUGF0aDogYC8ke0RJUl9BU1NFVFN9L2AsXG4gICAgZHN0OiBwYXRocy5kc3RBc3NldHNcbiAgfSxcbiAgZGV2OiB7XG4gICAgaG9zdDogJ2xvY2FsaG9zdCcsXG4gICAgd2VicGFja1BvcnQ6IDkwMDAsXG4gICAgYnJvd3NlcnN5bmNQb3J0OiAzMDAwXG4gIH1cbn1cblxuY29uZmlnID0gd2VicGFja0NvbmZpZyhjb25maWcpXG5sb2FkQ29uZmlncyhjb25maWcsIHNyYylcblxuZXhwb3J0IGRlZmF1bHQgY29uZmlnXG4iXX0=