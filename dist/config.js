'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _yargs = require('yargs');

var _loadConfigs = require('./lib/load-configs');

var _loadConfigs2 = _interopRequireDefault(_loadConfigs);

var _configWebpack = require('./config-webpack');

var _configWebpack2 = _interopRequireDefault(_configWebpack);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const isGulpDebug = process.env.GULP_DEBUG === 'true';
const isProduction = process.env.NODE_ENV === 'production';
const isDevelopment = !isProduction;

const cwd = _yargs.argv.originalCwd;
const src = _path2.default.resolve(cwd, _yargs.argv.src || process.env.SRC || 'src');
const dst = _path2.default.resolve(cwd, _yargs.argv.dst || process.env.DST || 'build');

const DIR_PAGES = 'pages';
const DIR_CONTENT = 'content';
const DIR_HELPERS = 'helpers';
const DIR_PARTIALS = 'partials';
const DIR_LAYOUTS = 'layouts';
const DIR_SCRIPTS = 'scripts';
const DIR_STYLES = 'styles';
const DIR_ASSETS = 'assets';
const DIR_PUBLIC = 'public';
const TPL_ENGINE = 'handlebars';

const paths = {
  cwd,
  src,
  dst,
  dstAssets: _path2.default.join(dst, DIR_ASSETS),
  srcPublic: _path2.default.join(src, DIR_PUBLIC),
  srcScripts: _path2.default.join(src, DIR_SCRIPTS),
  srcStyles: _path2.default.join(src, DIR_STYLES),
  srcLayouts: _path2.default.join(src, DIR_LAYOUTS),
  srcContent: _path2.default.join(src, DIR_CONTENT),
  srcPages: _path2.default.join(src, DIR_PAGES),
  srcHelpers: _path2.default.join(src, DIR_HELPERS),
  srcPartials: _path2.default.join(src, DIR_PARTIALS)
};

let config = {
  isGulpDebug,
  isProduction,
  isDevelopment,
  paths,
  htmlmin: {
    pattern: '**/*.html'
  },
  pages: {
    directory: paths.srcPages
  },
  contentDir: {
    directory: paths.srcContent,
    transformer: 'wordpress'
  },
  helpers: {
    directory: paths.srcHelpers
  },
  layouts: {
    engine: TPL_ENGINE,
    directory: paths.srcLayouts,
    partials: paths.srcPartials
  },
  inplace: {
    engineOptions: {
      partials: paths.srcPartials,
      helpers: paths.srcHelpers
    }
  },
  copy: {
    src: _path2.default.join(paths.srcPublic, '**/*')
  },
  assets: {
    scripts: _path2.default.join(paths.srcScripts, '*.js'),
    styles: _path2.default.join(paths.srcStyles, '*.css'),
    manifest: 'assets.json',
    publicPath: `/${DIR_ASSETS}/`,
    dst: paths.dstAssets
  },
  dev: {
    host: 'localhost',
    webpackPort: 9000,
    browsersyncPort: 3000
  }
};

config = (0, _configWebpack2.default)(config);
(0, _loadConfigs2.default)(config, src);

exports.default = config;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jb25maWcuanMiXSwibmFtZXMiOlsiaXNHdWxwRGVidWciLCJwcm9jZXNzIiwiZW52IiwiR1VMUF9ERUJVRyIsImlzUHJvZHVjdGlvbiIsIk5PREVfRU5WIiwiaXNEZXZlbG9wbWVudCIsImN3ZCIsImFyZ3YiLCJvcmlnaW5hbEN3ZCIsInNyYyIsInBhdGgiLCJyZXNvbHZlIiwiU1JDIiwiZHN0IiwiRFNUIiwiRElSX1BBR0VTIiwiRElSX0NPTlRFTlQiLCJESVJfSEVMUEVSUyIsIkRJUl9QQVJUSUFMUyIsIkRJUl9MQVlPVVRTIiwiRElSX1NDUklQVFMiLCJESVJfU1RZTEVTIiwiRElSX0FTU0VUUyIsIkRJUl9QVUJMSUMiLCJUUExfRU5HSU5FIiwicGF0aHMiLCJkc3RBc3NldHMiLCJqb2luIiwic3JjUHVibGljIiwic3JjU2NyaXB0cyIsInNyY1N0eWxlcyIsInNyY0xheW91dHMiLCJzcmNDb250ZW50Iiwic3JjUGFnZXMiLCJzcmNIZWxwZXJzIiwic3JjUGFydGlhbHMiLCJjb25maWciLCJodG1sbWluIiwicGF0dGVybiIsInBhZ2VzIiwiZGlyZWN0b3J5IiwiY29udGVudERpciIsInRyYW5zZm9ybWVyIiwiaGVscGVycyIsImxheW91dHMiLCJlbmdpbmUiLCJwYXJ0aWFscyIsImlucGxhY2UiLCJlbmdpbmVPcHRpb25zIiwiY29weSIsImFzc2V0cyIsInNjcmlwdHMiLCJzdHlsZXMiLCJtYW5pZmVzdCIsInB1YmxpY1BhdGgiLCJkZXYiLCJob3N0Iiwid2VicGFja1BvcnQiLCJicm93c2Vyc3luY1BvcnQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7Ozs7O0FBRUEsTUFBTUEsY0FBY0MsUUFBUUMsR0FBUixDQUFZQyxVQUFaLEtBQTJCLE1BQS9DO0FBQ0EsTUFBTUMsZUFBZUgsUUFBUUMsR0FBUixDQUFZRyxRQUFaLEtBQXlCLFlBQTlDO0FBQ0EsTUFBTUMsZ0JBQWdCLENBQUNGLFlBQXZCOztB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QUFvQjNCLEdBQXBCOztrQkFFZTJCLE0iLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbmltcG9ydCB7IGFyZ3YgfSBmcm9tICd5YXJncydcbmltcG9ydCBsb2FkQ29uZmlncyBmcm9tICcuL2xpYi9sb2FkLWNvbmZpZ3MnXG5pbXBvcnQgd2VicGFja0NvbmZpZyBmcm9tICcuL2NvbmZpZy13ZWJwYWNrJ1xuXG5jb25zdCBpc0d1bHBEZWJ1ZyA9IHByb2Nlc3MuZW52LkdVTFBfREVCVUcgPT09ICd0cnVlJ1xuY29uc3QgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJ1xuY29uc3QgaXNEZXZlbG9wbWVudCA9ICFpc1Byb2R1Y3Rpb25cblxuY29uc3QgY3dkID0gYXJndi5vcmlnaW5hbEN3ZFxuY29uc3Qgc3JjID0gcGF0aC5yZXNvbHZlKGN3ZCwgYXJndi5zcmMgfHwgcHJvY2Vzcy5lbnYuU1JDIHx8ICdzcmMnKVxuY29uc3QgZHN0ID0gcGF0aC5yZXNvbHZlKGN3ZCwgYXJndi5kc3QgfHwgcHJvY2Vzcy5lbnYuRFNUIHx8ICdidWlsZCcpXG5cbmNvbnN0IERJUl9QQUdFUyA9ICdwYWdlcydcbmNvbnN0IERJUl9DT05URU5UID0gJ2NvbnRlbnQnXG5jb25zdCBESVJfSEVMUEVSUyA9ICdoZWxwZXJzJ1xuY29uc3QgRElSX1BBUlRJQUxTID0gJ3BhcnRpYWxzJ1xuY29uc3QgRElSX0xBWU9VVFMgPSAnbGF5b3V0cydcbmNvbnN0IERJUl9TQ1JJUFRTID0gJ3NjcmlwdHMnXG5jb25zdCBESVJfU1RZTEVTID0gJ3N0eWxlcydcbmNvbnN0IERJUl9BU1NFVFMgPSAnYXNzZXRzJ1xuY29uc3QgRElSX1BVQkxJQyA9ICdwdWJsaWMnXG5jb25zdCBUUExfRU5HSU5FID0gJ2hhbmRsZWJhcnMnXG5cbmNvbnN0IHBhdGhzID0ge1xuICBjd2QsXG4gIHNyYyxcbiAgZHN0LFxuICBkc3RBc3NldHM6IHBhdGguam9pbihkc3QsIERJUl9BU1NFVFMpLFxuICBzcmNQdWJsaWM6IHBhdGguam9pbihzcmMsIERJUl9QVUJMSUMpLFxuICBzcmNTY3JpcHRzOiBwYXRoLmpvaW4oc3JjLCBESVJfU0NSSVBUUyksXG4gIHNyY1N0eWxlczogcGF0aC5qb2luKHNyYywgRElSX1NUWUxFUyksXG4gIHNyY0xheW91dHM6IHBhdGguam9pbihzcmMsIERJUl9MQVlPVVRTKSxcbiAgc3JjQ29udGVudDogcGF0aC5qb2luKHNyYywgRElSX0NPTlRFTlQpLFxuICBzcmNQYWdlczogcGF0aC5qb2luKHNyYywgRElSX1BBR0VTKSxcbiAgc3JjSGVscGVyczogcGF0aC5qb2luKHNyYywgRElSX0hFTFBFUlMpLFxuICBzcmNQYXJ0aWFsczogcGF0aC5qb2luKHNyYywgRElSX1BBUlRJQUxTKVxufVxuXG5sZXQgY29uZmlnID0ge1xuICBpc0d1bHBEZWJ1ZyxcbiAgaXNQcm9kdWN0aW9uLFxuICBpc0RldmVsb3BtZW50LFxuICBwYXRocyxcbiAgaHRtbG1pbjoge1xuICAgIHBhdHRlcm46ICcqKi8qLmh0bWwnXG4gIH0sXG4gIHBhZ2VzOiB7XG4gICAgZGlyZWN0b3J5OiBwYXRocy5zcmNQYWdlc1xuICB9LFxuICBjb250ZW50RGlyOiB7XG4gICAgZGlyZWN0b3J5OiBwYXRocy5zcmNDb250ZW50LFxuICAgIHRyYW5zZm9ybWVyOiAnd29yZHByZXNzJ1xuICB9LFxuICBoZWxwZXJzOiB7XG4gICAgZGlyZWN0b3J5OiBwYXRocy5zcmNIZWxwZXJzXG4gIH0sXG4gIGxheW91dHM6IHtcbiAgICBlbmdpbmU6IFRQTF9FTkdJTkUsXG4gICAgZGlyZWN0b3J5OiBwYXRocy5zcmNMYXlvdXRzLFxuICAgIHBhcnRpYWxzOiBwYXRocy5zcmNQYXJ0aWFsc1xuICB9LFxuICBpbnBsYWNlOiB7XG4gICAgZW5naW5lT3B0aW9uczoge1xuICAgICAgcGFydGlhbHM6IHBhdGhzLnNyY1BhcnRpYWxzLFxuICAgICAgaGVscGVyczogcGF0aHMuc3JjSGVscGVyc1xuICAgIH1cbiAgfSxcbiAgY29weToge1xuICAgIHNyYzogcGF0aC5qb2luKHBhdGhzLnNyY1B1YmxpYywgJyoqLyonKVxuICB9LFxuICBhc3NldHM6IHtcbiAgICBzY3JpcHRzOiBwYXRoLmpvaW4ocGF0aHMuc3JjU2NyaXB0cywgJyouanMnKSxcbiAgICBzdHlsZXM6IHBhdGguam9pbihwYXRocy5zcmNTdHlsZXMsICcqLmNzcycpLFxuICAgIG1hbmlmZXN0OiAnYXNzZXRzLmpzb24nLFxuICAgIHB1YmxpY1BhdGg6IGAvJHtESVJfQVNTRVRTfS9gLFxuICAgIGRzdDogcGF0aHMuZHN0QXNzZXRzXG4gIH0sXG4gIGRldjoge1xuICAgIGhvc3Q6ICdsb2NhbGhvc3QnLFxuICAgIHdlYnBhY2tQb3J0OiA5MDAwLFxuICAgIGJyb3dzZXJzeW5jUG9ydDogMzAwMFxuICB9XG59XG5cbmNvbmZpZyA9IHdlYnBhY2tDb25maWcoY29uZmlnKVxubG9hZENvbmZpZ3MoY29uZmlnLCBzcmMpXG5cbmV4cG9ydCBkZWZhdWx0IGNvbmZpZ1xuIl19