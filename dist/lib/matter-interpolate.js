'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _lodash = require('lodash');

exports.default = matterInterpolate;


const VARIABLE_PATTERN = '\\$\\{([^}]+)\\}';
const VARIABLE_REGEXP = new RegExp(VARIABLE_PATTERN, 'g');
const SINGLE_VARIABLE_REGEXP = new RegExp(`^${VARIABLE_PATTERN}$`);

function matterInterpolate(input, metadata, processFn = v => v) {
  let result = input.match(SINGLE_VARIABLE_REGEXP);
  if (result) {
    const variable = result[1];
    return interpolateOne(variable, metadata, processFn);
  }

  return input.replace(VARIABLE_REGEXP, (match, variable) => interpolateOne(variable, metadata, processFn));
}

function interpolateOne(variable, object, processFn) {
  return processFn(resolve(variable, object));
}

function resolve(path, object) {
  const value = (0, _lodash.get)(object, path);
  if (value === undefined) {
    throw new Error('Cannot resolve data path: ' + JSON.stringify({
      path,
      object
    }, null, 2));
  }

  return value;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvbWF0dGVyLWludGVycG9sYXRlLmpzIl0sIm5hbWVzIjpbIm1hdHRlckludGVycG9sYXRlIiwiVkFSSUFCTEVfUEFUVEVSTiIsIlZBUklBQkxFX1JFR0VYUCIsIlJlZ0V4cCIsIlNJTkdMRV9WQVJJQUJMRV9SRUdFWFAiLCJpbnB1dCIsIm1ldGFkYXRhIiwicHJvY2Vzc0ZuIiwidiIsInJlc3VsdCIsIm1hdGNoIiwidmFyaWFibGUiLCJpbnRlcnBvbGF0ZU9uZSIsInJlcGxhY2UiLCJvYmplY3QiLCJyZXNvbHZlIiwicGF0aCIsInZhbHVlIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJKU09OIiwic3RyaW5naWZ5Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7a0JBQ2VBLGlCOzs7QUFFZixNQUFNQyxtQkFBbUIsa0JBQXpCO0FBQ0EsTUFBTUMsa0JBQWtCLElBQUlDLE1BQUosQ0FBV0YsZ0JBQVgsRUFBNkIsR0FBN0IsQ0FBeEI7QUFDQSxNQUFNRyx5QkFBeUIsSUFBSUQsTUFBSixDQUFZLElBQUdGLGdCQUFpQixHQUFoQyxDQUEvQjs7QUFFQSxTQUFTRCxpQkFBVCxDQUE0QkssS0FBNUIsRUFBbUNDLFFBQW5DLEVBQTZDQyxZQUFZQyxLQUFLQSxDQUE5RCxFQUFpRTtBQUMvRCxNQUFJQyxTQUFTSixNQUFNSyxLQUFOLENBQVlOLHNCQUFaLENBQWI7QUFDQSxNQUFJSyxNQUFKLEVBQVk7QUFDVixVQUFNRSxXQUFXRixPQUFPLENBQVAsQ0FBakI7QUFDQSxXQUFPRyxlQUFlRCxRQUFmLEVBQXlCTCxRQUF6QixFQUFtQ0MsU0FBbkMsQ0FBUDtBQUNEOztBQUVELFNBQU9GLE1BQU1RLE9BQU4sQ0FBY1gsZUFBZCxFQUErQixDQUFDUSxLQUFELEVBQVFDLFFBQVIsS0FDcENDLGVBQWVELFFBQWYsRUFBeUJMLFFBQXpCLEVBQW1DQyxTQUFuQyxDQURLLENBQVA7QUFFRDs7QUFFRCxTQUFTSyxjQUFULENBQXlCRCxRQUF6QixFQUFtQ0csTUFBbkMsRUFBMkNQLFNBQTNDLEVBQXNEO0FBQ3BELFNBQU9BLFVBQVVRLFFBQVFKLFFBQVIsRUFBa0JHLE1BQWxCLENBQVYsQ0FBUDtBQUNEOztBQUVELFNBQVNDLE9BQVQsQ0FBa0JDLElBQWxCLEVBQXdCRixNQUF4QixFQUFnQztBQUM5QixRQUFNRyxRQUFRLGlCQUFJSCxNQUFKLEVBQVlFLElBQVosQ0FBZDtBQUNBLE1BQUlDLFVBQVVDLFNBQWQsRUFBeUI7QUFDdkIsVUFBTSxJQUFJQyxLQUFKLENBQVUsK0JBQStCQyxLQUFLQyxTQUFMLENBQWU7QUFDNURMLFVBRDREO0FBRTVERjtBQUY0RCxLQUFmLEVBRzVDLElBSDRDLEVBR3RDLENBSHNDLENBQXpDLENBQU47QUFJRDs7QUFFRCxTQUFPRyxLQUFQO0FBQ0QiLCJmaWxlIjoibWF0dGVyLWludGVycG9sYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0IH0gZnJvbSAnbG9kYXNoJ1xuZXhwb3J0IGRlZmF1bHQgbWF0dGVySW50ZXJwb2xhdGVcblxuY29uc3QgVkFSSUFCTEVfUEFUVEVSTiA9ICdcXFxcJFxcXFx7KFtefV0rKVxcXFx9J1xuY29uc3QgVkFSSUFCTEVfUkVHRVhQID0gbmV3IFJlZ0V4cChWQVJJQUJMRV9QQVRURVJOLCAnZycpXG5jb25zdCBTSU5HTEVfVkFSSUFCTEVfUkVHRVhQID0gbmV3IFJlZ0V4cChgXiR7VkFSSUFCTEVfUEFUVEVSTn0kYClcblxuZnVuY3Rpb24gbWF0dGVySW50ZXJwb2xhdGUgKGlucHV0LCBtZXRhZGF0YSwgcHJvY2Vzc0ZuID0gdiA9PiB2KSB7XG4gIGxldCByZXN1bHQgPSBpbnB1dC5tYXRjaChTSU5HTEVfVkFSSUFCTEVfUkVHRVhQKVxuICBpZiAocmVzdWx0KSB7XG4gICAgY29uc3QgdmFyaWFibGUgPSByZXN1bHRbMV1cbiAgICByZXR1cm4gaW50ZXJwb2xhdGVPbmUodmFyaWFibGUsIG1ldGFkYXRhLCBwcm9jZXNzRm4pXG4gIH1cblxuICByZXR1cm4gaW5wdXQucmVwbGFjZShWQVJJQUJMRV9SRUdFWFAsIChtYXRjaCwgdmFyaWFibGUpID0+XG4gICAgaW50ZXJwb2xhdGVPbmUodmFyaWFibGUsIG1ldGFkYXRhLCBwcm9jZXNzRm4pKVxufVxuXG5mdW5jdGlvbiBpbnRlcnBvbGF0ZU9uZSAodmFyaWFibGUsIG9iamVjdCwgcHJvY2Vzc0ZuKSB7XG4gIHJldHVybiBwcm9jZXNzRm4ocmVzb2x2ZSh2YXJpYWJsZSwgb2JqZWN0KSlcbn1cblxuZnVuY3Rpb24gcmVzb2x2ZSAocGF0aCwgb2JqZWN0KSB7XG4gIGNvbnN0IHZhbHVlID0gZ2V0KG9iamVjdCwgcGF0aClcbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0Nhbm5vdCByZXNvbHZlIGRhdGEgcGF0aDogJyArIEpTT04uc3RyaW5naWZ5KHtcbiAgICAgIHBhdGgsXG4gICAgICBvYmplY3RcbiAgICB9LCBudWxsLCAyKSlcbiAgfVxuXG4gIHJldHVybiB2YWx1ZVxufVxuIl19