'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _requireDir = require('require-dir');

var _requireDir2 = _interopRequireDefault(_requireDir);

var _config = require('../config');

var _config2 = _interopRequireDefault(_config);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = loadContent;


function loadContent(options) {
  const {
    directory,
    transformer
  } = options;

  const staticDir = _path2.default.join(directory, 'static');
  const dynamicDir = _path2.default.join(directory, 'dynamic');

  const content = loadJsonContent(staticDir);
  if (transformer) transformContent(content, transformer);
  runAugmentersFromDir(dynamicDir, content);

  return content;
}

function loadJsonContent(dir) {
  return (0, _requireDir2.default)(dir);
}

function runAugmentersFromDir(dir, content) {
  const augmenters = (0, _requireDir2.default)(dir);
  Object.keys(augmenters).forEach(contentType => {
    const augment = augmenters[contentType];
    const entities = content[contentType];

    if (!entities) {
      content[contentType] = augment({}, content, _config2.default);
      return;
    }

    if (!Array.isArray(entities)) {
      content[contentType] = augment(entities, content, _config2.default);
      return;
    }

    content[contentType] = entities.map(entity => augment(entity, content, _config2.default));
  });
}

function transformContent(content, transformerName) {
  const transformerFn = transformerByName(transformerName);
  transformerFn(content);
}

function transformerByName(transformerName) {
  try {
    return require(`./content-transformers/${transformerName}`);
  } catch (error) {
    throw new Error(`Unsupported transformer "${transformerName}"`);
  }
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9saWIvbG9hZC1jb250ZW50LmpzIl0sIm5hbWVzIjpbImxvYWRDb250ZW50Iiwib3B0aW9ucyIsImRpcmVjdG9yeSIsInRyYW5zZm9ybWVyIiwic3RhdGljRGlyIiwicGF0aCIsImpvaW4iLCJkeW5hbWljRGlyIiwiY29udGVudCIsImxvYWRKc29uQ29udGVudCIsInRyYW5zZm9ybUNvbnRlbnQiLCJydW5BdWdtZW50ZXJzRnJvbURpciIsImRpciIsImF1Z21lbnRlcnMiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsImNvbnRlbnRUeXBlIiwiYXVnbWVudCIsImVudGl0aWVzIiwiY29uZmlnIiwiQXJyYXkiLCJpc0FycmF5IiwibWFwIiwiZW50aXR5IiwidHJhbnNmb3JtZXJOYW1lIiwidHJhbnNmb3JtZXJGbiIsInRyYW5zZm9ybWVyQnlOYW1lIiwicmVxdWlyZSIsImVycm9yIiwiRXJyb3IiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7Ozs7O2tCQUVlQSxXOzs7QUFFZixTQUFTQSxXQUFULENBQXNCQyxPQUF0QixFQUErQjtBQUM3QixRQUFNO0FBQ0pDLGFBREk7QUFFSkM7QUFGSSxNQUdGRixPQUhKOztBQUtBLFFBQU1HLFlBQVlDLGVBQUtDLElBQUwsQ0FBVUosU0FBVixFQUFxQixRQUFyQixDQUFsQjtBQUNBLFFBQU1LLGFBQWFGLGVBQUtDLElBQUwsQ0FBVUosU0FBVixFQUFxQixTQUFyQixDQUFuQjs7QUFFQSxRQUFNTSxVQUFVQyxnQkFBZ0JMLFNBQWhCLENBQWhCO0FBQ0EsTUFBSUQsV0FBSixFQUFpQk8saUJBQWlCRixPQUFqQixFQUEwQkwsV0FBMUI7QUFDakJRLHVCQUFxQkosVUFBckIsRUFBaUNDLE9BQWpDOztBQUVBLFNBQU9BLE9BQVA7QUFDRDs7QUFFRCxTQUFTQyxlQUFULENBQTBCRyxHQUExQixFQUErQjtBQUM3QixTQUFPLDBCQUFXQSxHQUFYLENBQVA7QUFDRDs7QUFFRCxTQUFTRCxvQkFBVCxDQUErQkMsR0FBL0IsRUFBb0NKLE9BQXBDLEVBQTZDO0FBQzNDLFFBQU1LLGFBQWEsMEJBQVdELEdBQVgsQ0FBbkI7QUFDQUUsU0FBT0MsSUFBUCxDQUFZRixVQUFaLEVBQXdCRyxPQUF4QixDQUFnQ0MsZUFBZTtBQUM3QyxVQUFNQyxVQUFVTCxXQUFXSSxXQUFYLENBQWhCO0FBQ0EsVUFBTUUsV0FBV1gsUUFBUVMsV0FBUixDQUFqQjs7QUFFQSxRQUFJLENBQUNFLFFBQUwsRUFBZTtBQUNiWCxjQUFRUyxXQUFSLElBQXVCQyxRQUFRLEVBQVIsRUFBWVYsT0FBWixFQUFxQlksZ0JBQXJCLENBQXZCO0FBQ0E7QUFDRDs7QUFFRCxRQUFJLENBQUNDLE1BQU1DLE9BQU4sQ0FBY0gsUUFBZCxDQUFMLEVBQThCO0FBQzVCWCxjQUFRUyxXQUFSLElBQXVCQyxRQUFRQyxRQUFSLEVBQWtCWCxPQUFsQixFQUEyQlksZ0JBQTNCLENBQXZCO0FBQ0E7QUFDRDs7QUFFRFosWUFBUVMsV0FBUixJQUF1QkUsU0FBU0ksR0FBVCxDQUFhQyxVQUFVTixRQUFRTSxNQUFSLEVBQWdCaEIsT0FBaEIsRUFBeUJZLGdCQUF6QixDQUF2QixDQUF2QjtBQUNELEdBZkQ7QUFnQkQ7O0FBRUQsU0FBU1YsZ0JBQVQsQ0FBMkJGLE9BQTNCLEVBQW9DaUIsZUFBcEMsRUFBcUQ7QUFDbkQsUUFBTUMsZ0JBQWdCQyxrQkFBa0JGLGVBQWxCLENBQXRCO0FBQ0FDLGdCQUFjbEIsT0FBZDtBQUNEOztBQUVELFNBQVNtQixpQkFBVCxDQUE0QkYsZUFBNUIsRUFBNkM7QUFDM0MsTUFBSTtBQUNGLFdBQU9HLFFBQVMsMEJBQXlCSCxlQUFnQixFQUFsRCxDQUFQO0FBQ0QsR0FGRCxDQUVFLE9BQU9JLEtBQVAsRUFBYztBQUNkLFVBQU0sSUFBSUMsS0FBSixDQUFXLDRCQUEyQkwsZUFBZ0IsR0FBdEQsQ0FBTjtBQUNEO0FBQ0YiLCJmaWxlIjoibG9hZC1jb250ZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhdGggZnJvbSAncGF0aCdcbmltcG9ydCByZXF1aXJlRGlyIGZyb20gJ3JlcXVpcmUtZGlyJ1xuaW1wb3J0IGNvbmZpZyBmcm9tICcuLi9jb25maWcnXG5cbmV4cG9ydCBkZWZhdWx0IGxvYWRDb250ZW50XG5cbmZ1bmN0aW9uIGxvYWRDb250ZW50IChvcHRpb25zKSB7XG4gIGNvbnN0IHtcbiAgICBkaXJlY3RvcnksXG4gICAgdHJhbnNmb3JtZXJcbiAgfSA9IG9wdGlvbnNcblxuICBjb25zdCBzdGF0aWNEaXIgPSBwYXRoLmpvaW4oZGlyZWN0b3J5LCAnc3RhdGljJylcbiAgY29uc3QgZHluYW1pY0RpciA9IHBhdGguam9pbihkaXJlY3RvcnksICdkeW5hbWljJylcblxuICBjb25zdCBjb250ZW50ID0gbG9hZEpzb25Db250ZW50KHN0YXRpY0RpcilcbiAgaWYgKHRyYW5zZm9ybWVyKSB0cmFuc2Zvcm1Db250ZW50KGNvbnRlbnQsIHRyYW5zZm9ybWVyKVxuICBydW5BdWdtZW50ZXJzRnJvbURpcihkeW5hbWljRGlyLCBjb250ZW50KVxuXG4gIHJldHVybiBjb250ZW50XG59XG5cbmZ1bmN0aW9uIGxvYWRKc29uQ29udGVudCAoZGlyKSB7XG4gIHJldHVybiByZXF1aXJlRGlyKGRpcilcbn1cblxuZnVuY3Rpb24gcnVuQXVnbWVudGVyc0Zyb21EaXIgKGRpciwgY29udGVudCkge1xuICBjb25zdCBhdWdtZW50ZXJzID0gcmVxdWlyZURpcihkaXIpXG4gIE9iamVjdC5rZXlzKGF1Z21lbnRlcnMpLmZvckVhY2goY29udGVudFR5cGUgPT4ge1xuICAgIGNvbnN0IGF1Z21lbnQgPSBhdWdtZW50ZXJzW2NvbnRlbnRUeXBlXVxuICAgIGNvbnN0IGVudGl0aWVzID0gY29udGVudFtjb250ZW50VHlwZV1cblxuICAgIGlmICghZW50aXRpZXMpIHtcbiAgICAgIGNvbnRlbnRbY29udGVudFR5cGVdID0gYXVnbWVudCh7fSwgY29udGVudCwgY29uZmlnKVxuICAgICAgcmV0dXJuXG4gICAgfVxuXG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGVudGl0aWVzKSkge1xuICAgICAgY29udGVudFtjb250ZW50VHlwZV0gPSBhdWdtZW50KGVudGl0aWVzLCBjb250ZW50LCBjb25maWcpXG4gICAgICByZXR1cm5cbiAgICB9XG5cbiAgICBjb250ZW50W2NvbnRlbnRUeXBlXSA9IGVudGl0aWVzLm1hcChlbnRpdHkgPT4gYXVnbWVudChlbnRpdHksIGNvbnRlbnQsIGNvbmZpZykpXG4gIH0pXG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybUNvbnRlbnQgKGNvbnRlbnQsIHRyYW5zZm9ybWVyTmFtZSkge1xuICBjb25zdCB0cmFuc2Zvcm1lckZuID0gdHJhbnNmb3JtZXJCeU5hbWUodHJhbnNmb3JtZXJOYW1lKVxuICB0cmFuc2Zvcm1lckZuKGNvbnRlbnQpXG59XG5cbmZ1bmN0aW9uIHRyYW5zZm9ybWVyQnlOYW1lICh0cmFuc2Zvcm1lck5hbWUpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gcmVxdWlyZShgLi9jb250ZW50LXRyYW5zZm9ybWVycy8ke3RyYW5zZm9ybWVyTmFtZX1gKVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IG5ldyBFcnJvcihgVW5zdXBwb3J0ZWQgdHJhbnNmb3JtZXIgXCIke3RyYW5zZm9ybWVyTmFtZX1cImApXG4gIH1cbn1cbiJdfQ==